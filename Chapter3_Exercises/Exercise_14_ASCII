/* Fa√ßa um programa que converta uma letra mai√∫scula em
letra min√∫scula. Use a tabela ASCII para isso. */

#include <stdlib.h>
#include <stdio.h>


int main(){
    
    char letra, letra_minuscula;
    
    printf("Digite uma letra maiuscula:");
    scanf("%c", &letra);
    
    letra_minuscula = letra + 32;
    
    printf("A letra min√∫scula √© : %c", letra_minuscula);
    
} 


/* A soma de 32 funciona porque, na tabela ASCII, as letras mai√∫sculas e min√∫sculas t√™m c√≥digos num√©ricos fixos com uma diferen√ßa de 32.

üîπ Estrutura da Tabela ASCII
Na tabela ASCII:

As letras mai√∫sculas v√£o de 'A' a 'Z' ‚Üí c√≥digos 65 a 90
As letras min√∫sculas v√£o de 'a' a 'z' ‚Üí c√≥digos 97 a 122
Se observar a diferen√ßa:

97‚àí65=32,98‚àí66=32,99‚àí67=32,e¬†assim¬†por¬†diante...
Isso significa que, para converter uma letra mai√∫scula em min√∫scula, basta adicionar 32 ao seu c√≥digo ASCII.

üîπ Em termos bin√°rios
O c√≥digo ASCII da letra 'A' √© 65 em decimal, que em bin√°rio √©: 'A'  =  01000001  (65 em decimal)

csharp
'a'  =  01100001  (97 em decimal)
O c√≥digo ASCII da letra 'a' √© 97 em decimal:
A √∫nica diferen√ßa √© o 6¬∫ bit, que est√° desligado (0) nas mai√∫sculas e ligado (1) nas min√∫sculas:

Mai√∫scula:  01000001 ('A' = 65)
Min√∫scula:  01100001 ('a' = 97)

arduino
Mai√∫scula:  01000001 ('A' = 65)
Min√∫scula:  01100001 ('a' = 97)
O valor 32 em bin√°rio √© 0b00100000, que corresponde exatamente ao bit que precisa ser ativado para transformar a letra mai√∫scula em min√∫scula.

Ent√£o, somar 32 ao c√≥digo da letra ativa esse bit, fazendo a convers√£o! */
